*&---------------------------------------------------------------------*
*& Include          ZRC1_25_01F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form get_main_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_main_data .

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM ztc1_docu_25.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_screen .

  IF go_cont IS INITIAL.

    CLEAR : gt_fcat.
    PERFORM set_fcat USING :  'X' 'RYEAR'   'ZTC1_DOCU_25' ' ' ' ',
                              'X' 'RBUKRS'  'ZTC1_DOCU_25' ' ' ' ',
                              'X' 'BELNR'   'ZTC1_DOCU_25' ' ' ' ',
                              ' ' 'RACCT'   'ZTC1_DOCU_25' ' ' ' ',
                              ' ' 'REMARK'  'ZTC1_DOCU_25' ' ' ' ',
                              ' ' 'HSL'     'ZTC1_DOCU_25' ' ' ' ',
                              ' ' 'RTCUR'   'ZTC1_DOCU_25' ' ' ' ',
                              ' ' 'POST_YN' 'ZTC1_DOCU_25' ' ' ' '.
    PERFORM set_layo.
    PERFORM create_obj.

    SET HANDLER : lcl_event_handler=>edit_toolbar FOR go_alv,
                  lcl_event_handler=>user_command FOR go_alv,
                  lcl_event_handler=>modify_value FOR go_alv.

    CALL METHOD go_alv->set_table_for_first_display
      EXPORTING
        is_variant      = gs_variant
        i_save          = 'A'
        i_default       = 'X'
        is_layout       = gs_layo
      CHANGING
        it_outtab       = gt_body
        it_fieldcatalog = gt_fcat.

    PERFORM register_event.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_fcat
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_fcat USING : pv_key pv_field pv_table pv_just pv_emph.

  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-ref_table = pv_table.
  gs_fcat-just      = pv_just.
  gs_fcat-emphasize = pv_emph.
  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_layo
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_layo .

  gs_layo-zebra      = 'X'.
  gs_layo-sel_mode   = 'D'.
  gs_layo-cwidth_opt = 'X'.
  gs_layo-stylefname = 'CELL_TAB'.

  gs_variant-report   = sy-repid.
  gs_variant-handle   = 'ALV1'.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_obj
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_obj .

  CREATE OBJECT go_cont
    EXPORTING
      side      = go_cont->dock_at_left
      extension = 5000.

  CREATE OBJECT go_alv
    EXPORTING
      i_parent = go_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_edit_toolbar
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_INTERACTIVE
*&      --> E_OBJECT
*&---------------------------------------------------------------------*
FORM handle_edit_toolbar  USING    pv_interactive
                                   "toolbar event# ##### ## #### ####
                                   po_object TYPE REF TO cl_alv_event_toolbar_set.

  DATA : lv_disabled.

  IF gv_mode EQ 'D'. "alv# ## ####
    lv_disabled = 'X'. "### #### # #
  ENDIF.

  CLEAR : gs_button.
  gs_button-butn_type = '3'. "toolbar# section# #### icon
  APPEND gs_button TO po_object->mt_toolbar. "cl_alv_event_toolbar_set #### attribute# mt_toolbar# #### ## po_object##### ##

  CLEAR : gs_button.
  gs_button-function = 'TOGL'. "toggle icon# function code# #####
  gs_button-icon     = icon_toggle_display_change.
  APPEND gs_button TO po_object->mt_toolbar.

  CLEAR : gs_button.
  gs_button-butn_type = '3'.
  APPEND gs_button TO po_object->mt_toolbar.

  CLEAR : gs_button.
  gs_button-function = 'IROW'. "# ## icon# function code# #####
  gs_button-icon     = icon_insert_row.
  APPEND gs_button TO po_object->mt_toolbar.

  CLEAR : gs_button.
  gs_button-function = 'DROW'. "# ## icon# function code# #####
  gs_button-icon     = icon_delete_row.
  APPEND gs_button TO po_object->mt_toolbar.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_user_command
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_UCOMM
*&---------------------------------------------------------------------*
FORM handle_user_command  USING    pv_ucomm.

  CASE pv_ucomm.
    WHEN 'TOGL'.
      PERFORM change_data.
    WHEN 'IROW'.
      PERFORM insert_row.
    WHEN 'DROW'.
      PERFORM delete_row.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form change_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM change_data .

  CASE gv_mode.
    WHEN 'E'.        "alv# ######,
      gv_mode = 'D'. "##### ####
      CALL METHOD go_alv->set_ready_for_input
        EXPORTING
          i_ready_for_input = 0.
    WHEN 'D'.        "alv# ######,
      gv_mode = 'E'. "##### ####
      CALL METHOD go_alv->set_ready_for_input
        EXPORTING
          i_ready_for_input = 1.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form insert_row
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM insert_row .

  DATA : ls_style TYPE lvc_s_styl. "styl ### #### ls_style ### ##

  CLEAR : gs_body.
  ls_style-style = cl_gui_alv_grid=>mc_style_enabled. "# #### attribute# ###
  INSERT ls_style INTO TABLE gs_body-cell_tab. "##### gs_body-cell_tab ##### ##

  APPEND gs_body TO gt_body.

  PERFORM refresh_table. "table ####

ENDFORM.
*&---------------------------------------------------------------------*
*& Form delete_row
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM delete_row .

  DATA : ls_roid TYPE lvc_s_roid,
         lt_roid TYPE lvc_t_roid.
  "user# ### ## ## ##
  CALL METHOD go_alv->get_selected_rows
    IMPORTING
      et_row_no = lt_roid.

  IF lt_roid IS INITIAL. "user# ### ## #### ## #, #### ####
    MESSAGE s003 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  LOOP AT lt_roid INTO ls_roid .

*-- ## # ##
    READ TABLE gt_body INTO gs_body INDEX ls_roid-row_id.

*-- ## # data ####
    MOVE-CORRESPONDING gs_body TO gs_delt. "## # alv# data### ## #### ### ####
    APPEND gs_delt TO gt_delt.
    CLEAR gs_delt.

*-- ## ##
    DELETE gt_body INDEX ls_roid-row_id.

  ENDLOOP.

  PERFORM refresh_table. "table ####

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_table
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM refresh_table .

  "#### #### ### logic
  DATA : ls_stable TYPE lvc_s_stbl.

  ls_stable-col = 'X'. "user# ## #####
  ls_stable-row = 'X'. "user# ## #####

  CALL METHOD go_alv->refresh_table_display
    EXPORTING
      is_stable = ls_stable.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_modify_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_MODIFIED
*&      --> ET_GOOD_CELLS
*&---------------------------------------------------------------------*
FORM handle_modify_value  USING    pv_modified
                                   pt_good_cells TYPE lvc_t_modi.

  IF pv_modified IS INITIAL. "### data# ###
    EXIT.                    "##
  ELSE.                      "### data# ###
    LOOP AT pt_good_cells INTO DATA(ls_good_cells). "## table# data# ## wa# #### ### logic
      READ TABLE gt_body INTO gs_body INDEX ls_good_cells-row_id.
      gs_body-modi_yn = abap_true. "##### ###
      MODIFY gt_body FROM gs_body INDEX ls_good_cells-row_id TRANSPORTING modi_yn. "gt_body table# modi_yn ### ####
    ENDLOOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form save_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM save_data .

  DATA : lt_save   TYPE TABLE OF ztc1_docu_25,
         ls_save   TYPE ztc1_docu_25,
         lv_answer.

  DATA : lv_tabix TYPE sy-tabix.

*-- ALV# ##### #### method
  CALL METHOD go_alv->check_changed_data.

*-- modi_yn ##### true# data# ### : ## ### ## data# ###
  CLEAR gs_body.
  READ TABLE gt_body INTO gs_body WITH KEY modi_yn = 'X'.

*-- ##### ## ## ### ### #
  IF ( gs_body IS INITIAL ) AND ( gs_delt IS INITIAL ). "######, ##### ## ###
    MESSAGE s004 DISPLAY LIKE 'W'.
    EXIT.
  ENDIF.

*-- DATA ## ## popup
  PERFORM call_popup USING lv_answer. "## ### #### ####
  CHECK lv_answer = '1'.

*-- ## data# ####
  DELETE ztc1_docu_25 FROM TABLE gt_delt. "## table# ## #### data# ####

*-- data# ##
  MOVE-CORRESPONDING gt_body TO lt_save.
  MODIFY ztc1_docu_25 FROM TABLE lt_Save.

*-- ## ## ## ###
  IF sy-subrc = 0.
    MESSAGE s005 DISPLAY LIKE 'I'.
    COMMIT WORK.
  ELSE.
    MESSAGE s006 DISPLAY LIKE 'I'.
    ROLLBACK WORK.
  ENDIF.

  PERFORM refresh_table.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form call_popup
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> LV_ANSWER
*&---------------------------------------------------------------------*
FORM call_popup  USING    pv_answer.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = 'SAVE QUESTION'
      diagnose_object       = ' '
      text_question         = '########?'
      text_button_1         = 'YES'(001)
      icon_button_1         = ' '
      text_button_2         = 'NO'(002)
      icon_button_2         = ' '
      default_button        = '1'
      display_cancel_button = 'X'
    IMPORTING
      answer                = pv_answer.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_screen .

  DATA : ls_style TYPE lvc_s_styl,
         lv_tabix TYPE sy-tabix.

  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.

    ls_style-fieldname = ' '.     "##name# pk# ## #### ### ##### ##
    ls_style-style     = cl_gui_alv_grid=>mc_style_enabled. "### #### ## attribute
    INSERT ls_style INTO TABLE gs_body-cell_tab.
    CLEAR ls_style.

    ls_style-fieldname = 'RYEAR'. "pk# #### ### ##
    ls_style-style     = cl_gui_alv_grid=>mc_style_disabled. "### #### ## attribute
    INSERT ls_style INTO TABLE gs_body-cell_tab.
    CLEAR ls_style.

    ls_style-fieldname = 'RBUKRS'. "pk# #### ### ##
    ls_style-style     = cl_gui_alv_grid=>mc_style_disabled.
    INSERT ls_style INTO TABLE gs_body-cell_tab.
    CLEAR ls_style.

    ls_style-fieldname = 'BELNR'. "pk# #### ### ##
    ls_style-style     = cl_gui_alv_grid=>mc_style_disabled.
    INSERT ls_style INTO TABLE gs_body-cell_tab.
    CLEAR ls_style.

    MODIFY gt_body FROM gs_body INDEX lv_tabix
                                TRANSPORTING cell_tab.

  ENDLOOP.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form register_event
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM register_event .

  go_alv->register_edit_event( go_alv->mc_evt_enter ).
  go_alv->register_edit_event( go_alv->mc_evt_modified ).

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 758
